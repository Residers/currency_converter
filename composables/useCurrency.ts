export const useCurrency = () => {
  // –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫—É—Ä—Å–æ–≤ (–∫–µ—à–∏—Ä—É–µ—Ç—Å—è –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏)
  const rates = useState<Record<string, number>>("rates", () => ({}))
  const currencyList = ref<string[]>([])
  const lastUpdated = useState<string>("lastUpdated", () => "")
  // –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π
  const history = useState<IHistory[]>("conversion-history", () => [])
  interface IHistory {
    date: string
    from: string
    to: string
    amount: number
    result: number
  }
  /*************  ‚ú® Windsurf Command ‚≠ê  *************/
  /**
 * Converts an amount from one currency to another using the current exchange rates.
 * 

 * @param amount - The amount of currency to convert.
 * @param from - The currency code to convert from.
 * @param to - The currency code to convert to.
 * 
 * @returns The converted amount or undefined if the conversion could not be performed.
 */

  const fetchRates = async () => {
    console.log("üöÄ ~ fetchRates ~ rates.value:", rates.value)
    if (Object.keys(rates.value).length > 0) return // –ù–µ –≥—Ä—É–∑–∏–º –ø–æ–≤—Ç–æ—Ä–Ω–æ

    const { data } = await useFetch(
      "https://api.exchangerate-api.com/v4/latest/USD"
    )
    if (data.value) {
      currencyList.value = Object.keys(data.value.rates)
      rates.value = data.value.rates
    }
  }

  // –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è + –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é
  const convert = (amount: number, from: string, to: string) => {
    console.log("üöÄ ~ convert ~ convert:", rates.value[from], rates.value[to])
    if (!rates.value[from] || !rates.value[to]) return null
    const result = (amount * rates.value[to]) / rates.value[from]
    console.log("üöÄ ~ convert ~ result:", result)

    history.value.unshift({
      date: new Date().toLocaleString(),
      from: `${amount} ${from}`,
      to: `${result.toFixed(2)} ${to}`,
      amount,
      result,
    })

    return result
  }

  return { rates, fetchRates, convert, history, currencyList }
}
